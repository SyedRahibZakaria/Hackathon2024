name: Github Actions Demo Test

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      terraform_destroy:
        description: 'Select resource to destroy'
        required: true
        type: choice
        options:
          - ecs
          - ecr

jobs:

  build-ecr:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
      AWS_REGION: "us-east-1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: |
         cd /home/runner/work/Hackathon2024/Hackathon2024/infrastructure/ECR
         ls
         terraform init
         terraform apply --auto-approve

  build-and-push-docker-image:

    runs-on: ubuntu-latest
    needs: [build-ecr]
    steps:

      - name: Checkout to repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hackathon-2024
          IMAGE_TAG: ${{ github.sha }}
          ECR_REPO_URL: ${{ steps.login-ecr.outputs.registry }}/hackathon-2024
        run: |
          cd /home/runner/work/Hackathon2024/Hackathon2024/Sample\ Flask\ Application
          echo $ECR_REPO_URL
          echo $ECR_REGISTRY
          docker build -t $ECR_REPO_URL:$IMAGE_TAG .
          docker tag $ECR_REPO_URL:$IMAGE_TAG $ECR_REPO_URL:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-ecs:
    runs-on: ubuntu-latest
    needs: [build-and-push-docker-image]
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
      AWS_REGION: "us-east-1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: |
          cd /home/runner/work/Hackathon2024/Hackathon2024/infrastructure/ECS
          ls
          terraform init
          terraform apply --auto-approve

  destroy-ecr:
    if: ${{ github.event.inputs.action == 'ecr' }}
    runs-on: ubuntu-latest
    needs: [build-ecs]
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
      AWS_REGION: "us-east-1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: |
          cd /home/runner/work/Hackathon2024/Hackathon2024/infrastructure/ECR
          ls
          terraform init
          terraform destroy --auto-approve

  destroy-ecs:
    if: ${{ github.event.inputs.action == 'ecs' }}
    runs-on: ubuntu-latest
    needs: [build-ecs]
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
      AWS_REGION: "us-east-1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: |
          cd /home/runner/work/Hackathon2024/Hackathon2024/infrastructure/ECS
          ls
          terraform init
          terraform destroy --auto-approve
